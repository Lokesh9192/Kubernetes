# Pod Affinity: In values when we are mentioning another Pod then all the Deployments pods will be created in that node
# This helps when ay dependency of Pods accour we create Pod Affinity
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mavenwebappdp
  labels:
    app: mavenwebappdp
  namespace: k8-ns
spec:
  replicas: 5
  selector:
    matchLabels:
      app: mavenwebappdp
  template:
    metadata:
      labels:
        app: mavenwebappdp
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - nginx
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: mavenwebappdp
        image: salapalalokesh/maven-web-application:1
        ports:
        - containerPort: 8080
        resources:
          requests:
            cpu: 400m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
        readinessProbe:
          httpGet:
            path: /maven-web-app
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /maven-web-app
            port: 8080
          initialDelaySeconds: 10
          timeoutSeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: tomcatconfig
          mountPath: "/usr/local/tomcat/conf/tomcat-users.xml"
          subPath: "tomcat-users.xml"
      volumes:
      - name: tomcatconfig
        configMap:
          name: mavenwebappconfig
          items:
          - key: "tomcat-users.xml"
            path: "tomcat-users.xml"
---
apiVersion: v1
kind: Service
metadata:
  name: mavenwebappdp
  namespace: k8-ns
  labels:
    app: mavenwebappdp
spec:
  type: NodePort
  selector:
    app: mavenwebappdp
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30030
